input {
  beats {
    port => 5044
  }
}

filter {
  # Parse Docker container logs
  if [container][name] {
    mutate {
      add_field => { "service_name" => "%{[container][name]}" }
    }
  }

  # Parse JSON logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
      target => "parsed_json"
    }
  }

  # Extract log level
  grok {
    match => { 
      "message" => [
        "(?<log_level>INFO|WARN|ERROR|DEBUG|TRACE)",
        "\[(?<log_level>Information|Warning|Error|Debug|Trace)\]"
      ]
    }
  }

  # Normalize log levels
  if [log_level] {
    mutate {
      lowercase => ["log_level"]
    }
    
    if [log_level] == "information" {
      mutate { replace => { "log_level" => "info" } }
    }
    if [log_level] == "warning" {
      mutate { replace => { "log_level" => "warn" } }
    }
  }

  # Add timestamp
  date {
    match => [ "timestamp", "ISO8601" ]
  }

  # Tag by service
  if [service_name] =~ /stakeholders/ {
    mutate { add_tag => ["stakeholders-service", "go-service"] }
  } else if [service_name] =~ /tours/ {
    mutate { add_tag => ["tours-service", "dotnet-service"] }
  } else if [service_name] =~ /blogs/ {
    mutate { add_tag => ["blogs-service", "dotnet-service"] }
  } else if [service_name] =~ /followings/ {
    mutate { add_tag => ["followings-service", "dotnet-service"] }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "logstash-soa-project-%{+YYYY.MM.dd}"
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug
  }
}
